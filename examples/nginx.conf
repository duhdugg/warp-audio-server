# This is an example that might be placed within /etc/nginx/sites-enabled/
# Or you may decide to just copy the location blocks.
# It is using example.com as the domain and /audio/warp as the base path.
# For non-empty base paths, you must build the client with PUBLIC_URL set.
# example: `PUBLIC_URL=/audio/warp yarn build`
server {
    server_name example.com www.example.com;

    root /var/www/warp-audio-server;

    location /audio/warp {
	rewrite ^/audio/warp/(.*)$ /$1 break;
        proxy_pass http://localhost:8712;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    location /audio/warp/static {
        rewrite ^/audio/warp/static/(.*)$ /$1 break;
        proxy_cache_bypass 1;
        root /var/www/warp-audio-server/build/static;
    }

    # redirect all non-https traffic to https
    if ($scheme != "https") {
        return 302 https://$host$request_uri;
    }
    # you may want www.example.com to redirect to example.com
    if ($host = "www.example.com") {
        return 302 https://example.com$request_uri;
    }

    # re: HTTPS. The below lines are managed by Certbot.
    # delete these lines,
    # and see instructions here: https://certbot.eff.org/instructions
    listen 80; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# vim: set ft=nginx:
